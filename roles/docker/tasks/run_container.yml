- name: Install python3 and pip3
  yum:
    name:
      - python3
      - python3-pip
    state: present

- name: Remove existing Docker SDK for Python
  pip:
    name: docker
    state: absent
    executable: pip3

- name: Install specific Docker SDK for Python
  pip:
    name: docker==6.1.3
    executable: pip3

- name: Install ansible docker collection
  ansible.builtin.command: ansible-galaxy collection install community.docker
  delegate_to: localhost
  run_once: true
  changed_when: false

- name: Start Docker if not running
  service:
    name: docker
    state: started
    enabled: true

- name: Check Docker socket permissions
  ansible.builtin.command: ls -la /var/run/docker.sock
  register: docker_sock_perms
  changed_when: false

- name: Display Docker socket permissions
  debug:
    var: docker_sock_perms.stdout

- name: Check local docker connection
  ansible.builtin.command: docker ps
  register: docker_ps_output
  changed_when: false

- name: Display docker ps output
  debug:
    var: docker_ps_output.stdout

- name: Verify Docker SDK installation
  ansible.builtin.command: python3 -c "import docker; print(docker.version)"
  register: docker_sdk_version
  changed_when: false

- name: Display Docker SDK version
  debug:
    var: docker_sdk_version.stdout

# Stop and remove existing container if it exists
- name: Stop and remove existing NGINX container
  ansible.builtin.command: docker rm -f nginx_web
  ignore_errors: yes
  changed_when: false

# Create directory for HTML files
- name: Ensure directory for web content exists
  file:
    path: "{{ html_file_path | dirname }}"
    state: directory
    mode: '0755'

# Copy the index.html file to the target directory
- name: Copy custom index.html to web directory
  copy:
    src: index.html
    dest: "{{ html_file_path }}"
    mode: '0644'

# Run NGINX container with volume mount for the web content
- name: Pull and run NGINX container with custom content
  ansible.builtin.command: >
    docker run -d --name nginx_web -p 80:80 --restart always -v {{ html_file_path | dirname }}:/usr/share/nginx/html nginx
  register: docker_run_output
  failed_when: docker_run_output.rc != 0 and 'already in use' not in docker_run_output.stderr
  changed_when: docker_run_output.rc == 0

# Verify container is running
- name: Verify NGINX container is running
  ansible.builtin.command: docker ps -f name=nginx_web
  register: nginx_container_status
  changed_when: false

- name: Display NGINX container status
  debug:
    var: nginx_container_status.stdout
